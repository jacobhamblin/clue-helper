{"version":3,"sources":["Setup/index.js","Gameplay/Cell/index.js","Gameplay/index.js","App.js","serviceWorker.js","index.js"],"names":["Setup","reportState","_this","props","state","id","newPlayerName","players","play","enterGame","removePlayer","newState","Object","objectSpread","filter","player","setState","getPlayersList","react_default","a","createElement","className","map","name","onClick","submitPlayer","_this$state","concat","toConsumableArray","_this2","this","length","placeholder","onChange","e","target","value","onKeyPress","key","Component","valToColor","Cell","_ref","label","playerID","updateValue","style","backgroundColor","Gameplay","classicSuspects","MDSuspects","classicWeapons","MDWeapons","classicRooms","MDRooms","customSuspects","customWeapons","customRooms","confirmReset","resetting","shareState","openSnackbar","hiddenInput","select","setSelectionRange","document","execCommand","newAssetModal","type","editingAnAsset","removeAssetModal","removeAssetType","removeAssetLabel","removeAsset","forEach","prefix","noteValues","returnToSetup","tracking","newTracking","submitNewAsset","newAsset","toggleVersion","version","rows","sectionHeader","Fragment","Array","push","el","assets","_loop","i","row","j","Gameplay_Cell","_this3","populateRowsOfType","_this4","_this$state2","playerNames","MDActive","modalActive","editingAsset","substr","newAssetVisible","removeAssetVisible","resetVisible","val","populateBody","modalContents","contains","ref","node","resetState","btoa","JSON","stringify","getAllState","withSnackbar","STORAGE_KEY","INITIAL_STATE","game","setup","undefined","App","checkForURLState","URLSearchParams","window","location","search","get","loadedSharedURL","storedState","parse","atob","resetAllState","localStorage","setItem","updateSetupState","history","replaceState","pathname","updateStorage","updateGameState","_debounce","toggleGameState","existingState","getItem","keys","index_es","src_Gameplay","src_Setup","Boolean","hostname","match","ReactDOM","render","src_App_0","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.7b4f09f9.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport \"./Setup.css\";\n\nclass Setup extends Component {\n  reportState = this.props.reportState;\n  state = this.props.state || {\n    id: 0,\n    newPlayerName: \"\",\n    players: [],\n    play: false,\n  };\n  enterGame = () => {\n    this.reportState(this.state);\n    this.props.enterGame();\n  };\n  removePlayer = (id) => {\n    const { players } = this.state;\n    const newState = {\n      ...this.state,\n      players: players.filter((player) => player.id !== id),\n    };\n    this.setState(newState, this.reportState(newState));\n  };\n  getPlayersList = () => {\n    return (\n      <ul className=\"players-list\">\n        {this.state.players.map((player) => {\n          return (\n            <li>\n              <span>{player.name}</span>\n              <button\n                onClick={() => {\n                  this.removePlayer(player.id);\n                }}\n              >\n                x\n              </button>\n            </li>\n          );\n        })}\n      </ul>\n    );\n  };\n  submitPlayer = () => {\n    const { id, newPlayerName, players } = this.state;\n    const newState = {\n      ...this.state,\n      players: [...players, { id, name: newPlayerName }],\n      newPlayerName: \"\",\n      id: id + 1,\n    };\n    this.setState(newState, this.reportState(newState));\n  };\n  render() {\n    const play = this.state.players.length ? (\n      <div className=\"play\" onClick={() => this.enterGame()}>\n        Play\n      </div>\n    ) : (\n      <div className=\"play disabled\">Play</div>\n    );\n\n    return (\n      <div className=\"Setup offset-md-3 col-md-6 col-xs-12\">\n        <div className=\"new-player\">\n          <input\n            className=\"player-name\"\n            placeholder=\"player name\"\n            onChange={(e) => {\n              const newState = {\n                ...this.state,\n                newPlayerName: e.target.value,\n              };\n              this.setState(newState, this.reportState(newState));\n            }}\n            onKeyPress={(e) => {\n              if (e.key === \"Enter\") this.submitPlayer();\n            }}\n            value={this.state.newPlayerName}\n          />\n          <button\n            className=\"new-player-submit\"\n            onClick={() => this.submitPlayer()}\n          >\n            Save Player\n          </button>\n        </div>\n        {this.getPlayersList()}\n        {play}\n      </div>\n    );\n  }\n}\n\nexport default Setup;\n","import React from \"react\";\nimport \"./Cell.css\";\n\nconst valToColor = [\"inherit\", \"#ff785f\", \"#ff2a45\", \"#a143be\", \"#ccc\"];\n\nfunction Cell({ label, playerID, updateValue, value }) {\n  return (\n    <td\n      className=\"color\"\n      onClick={() => {\n        updateValue(playerID, label);\n      }}\n      style={{ backgroundColor: valToColor[value] }}\n    />\n  );\n}\n\nexport default Cell;\n","import React, { Component } from \"react\";\nimport { withSnackbar } from \"react-simple-snackbar\";\nimport \"./Gameplay.css\";\nimport Cell from \"./Cell\";\n\nclass Gameplay extends Component {\n  state = this.props.state;\n  reportState = this.props.reportState;\n  classicSuspects = [\n    \"Mr. Green\",\n    \"Prof. Plum\",\n    \"Col. Mustard\",\n    \"Mrs. Peacock\",\n    \"Miss Scarlet\",\n    \"Mrs. White\",\n  ];\n  MDSuspects = this.classicSuspects.concat([\n    \"Mme Rose\",\n    \"Sgt. Gray\",\n    \"M. Brunette\",\n    \"Miss Peach\",\n  ]);\n  classicWeapons = [\n    \"Candlestick\",\n    \"Knife\",\n    \"Lead Pipe\",\n    \"Revolver\",\n    \"Rope\",\n    \"Wrench\",\n  ];\n  MDWeapons = this.classicWeapons.concat([\"Poison\", \"Horseshoe\"]);\n  classicRooms = [\n    \"Conservatory\",\n    \"Lounge\",\n    \"Kitchen\",\n    \"Library\",\n    \"Hall\",\n    \"Study\",\n    \"Ballroom\",\n    \"Dining Room\",\n    \"Billiard Room\",\n  ];\n  MDRooms = [\n    \"Courtyard\",\n    \"Gazebo\",\n    \"Drawing Room\",\n    \"Dining Room\",\n    \"Kitchen\",\n    \"Carriage House\",\n    \"Trophy Room\",\n    \"Conservatory\",\n    \"Studio\",\n    \"Billiard Room\",\n    \"Library\",\n    \"Fountain\",\n  ];\n  customSuspects = [];\n  customWeapons = [];\n  customRooms = [];\n  confirmReset = () => {\n    const newState = { ...this.state, resetting: true };\n    this.setState(newState, this.reportState(newState));\n  };\n  shareState = () => {\n    const { openSnackbar } = this.props;\n    this.hiddenInput.select();\n    this.hiddenInput.setSelectionRange(0, 99999);\n    document.execCommand(\"copy\");\n    openSnackbar(\"Shareable URL copied!\", 3000);\n  };\n  newAssetModal = (type) => {\n    const newState = { ...this.state, editingAnAsset: type };\n    this.setState(newState, this.reportState(newState));\n  };\n  removeAssetModal = (type, label) => {\n    const newState = {\n      ...this.state,\n      removeAssetType: type,\n      removeAssetLabel: label,\n    };\n    this.setState(newState, this.reportState(newState));\n  };\n  removeAsset = () => {\n    const type = this.state.removeAssetType;\n    const label = this.state.removeAssetLabel;\n    const lists = [\n      this[\"classic\" + type],\n      this[\"MD\" + type],\n      this[\"custom\" + type],\n    ];\n    [\"classic\", \"MD\", \"custom\"].forEach((prefix) => {\n      this[prefix + type] = this[prefix + type].filter(\n        (value) => value !== label\n      );\n    });\n    const newState = {\n      ...this.state,\n      removeAssetType: \"\",\n      removeAssetLabel: \"\",\n    };\n    this.setState(newState, this.reportState(newState));\n  };\n  noteValues = [0, 1, 2, 3, 4];\n  returnToSetup = () => {\n    this.reportState(this.state);\n    this.props.returnToSetup();\n  };\n  updateValue = (playerID, label) => {\n    const { tracking } = this.state;\n    const newTracking = { ...tracking };\n\n    newTracking[playerID][label] =\n      ((newTracking[playerID][label] || 0) + 1) % this.noteValues.length;\n    const newState = { ...this.state, tracking: newTracking };\n    this.setState(newState, this.reportState(newState));\n  };\n  populateRowsOfType(type) {\n    const { tracking, version } = this.state;\n\n    let rows = [];\n    const sectionHeader = [\n      <>\n        <div\n          className=\"addNew\"\n          onClick={() => {\n            this.newAssetModal(type);\n          }}\n        >\n          +\n        </div>\n        <span className=\"header\">{type}</span>\n      </>,\n    ].concat(new Array(this.state.players.length));\n    rows.push(\n      <tr>\n        {sectionHeader.map((el) => (\n          <td className=\"sectionHeader\">{el}</td>\n        ))}\n      </tr>\n    );\n    const assets = this[version + type].concat(this[\"custom\" + type]);\n    for (let i = 0; i < assets.length; i++) {\n      let row = [];\n      const label = assets[i];\n      row.push(\n        <td>\n          <div className=\"assetContainer\">\n            <div\n              className=\"removeAsset\"\n              onClick={() => {\n                this.removeAssetModal(type, label);\n              }}\n            >\n              -\n            </div>\n            <span>{label}</span>\n          </div>\n        </td>\n      );\n      for (let j = 0; j < this.state.players.length; j++) {\n        const playerID = this.state.players[j].id;\n        row.push(\n          <Cell\n            value={tracking[playerID][label] || 0}\n            updateValue={this.updateValue}\n            playerID={playerID}\n            label={label}\n          />\n        );\n      }\n      rows.push(<tr>{row}</tr>);\n    }\n    return <>{rows}</>;\n  }\n  populateBody() {\n    const rowScaffolding = [\"Suspects\", \"Weapons\", \"Rooms\"];\n    return <>{rowScaffolding.map((row) => this.populateRowsOfType(row))}</>;\n  }\n  submitNewAsset = () => {\n    this[\"custom\" + this.state.editingAnAsset] = this[\n      \"custom\" + this.state.editingAnAsset\n    ].concat([this.state.newAsset]);\n    const newState = {\n      ...this.state,\n      editingAnAsset: false,\n      newAsset: \"\",\n    };\n    this.setState(newState, this.reportState(newState));\n  };\n  toggleVersion = () => {\n    const version = this.state.version === \"MD\" ? \"classic\" : \"MD\";\n    const newState = { ...this.state, version };\n    this.setState(newState, this.reportState(newState));\n  };\n  render() {\n    const { players, version } = this.state;\n    const playerNames = players.map((player) => player.name);\n    const MDActive = version === \"MD\" ? \"active\" : \"\";\n    const modalActive =\n      this.state.editingAnAsset ||\n      this.state.removeAssetLabel ||\n      this.state.resetting\n        ? \"active\"\n        : \"\";\n    const editingAsset =\n      this.state.editingAnAsset &&\n      this.state.editingAnAsset.substr(0, this.state.editingAnAsset.length - 1);\n    const newAssetVisible = this.state.editingAnAsset ? \"active\" : \"\";\n    const removeAssetVisible = this.state.removeAssetLabel ? \"active\" : \"\";\n    const resetVisible = this.state.resetting ? \"active\" : \"\";\n    const removeAsset =\n      this.state.removeAssetType &&\n      this.state.removeAssetType.substr(\n        0,\n        this.state.removeAssetType.length - 1\n      );\n    return (\n      <div className=\"Game offset-md-3 col-md-6 col-xs-12\">\n        <div className=\"top-row\">\n          <div\n            className={`master-detective ${MDActive}`}\n            onClick={() => {\n              this.toggleVersion();\n            }}\n          >\n            MD\n          </div>\n          <div\n            className=\"return\"\n            onClick={() => {\n              this.returnToSetup();\n            }}\n          >\n            Setup\n          </div>\n          <div\n            className={`share-state`}\n            onClick={() => {\n              this.shareState();\n            }}\n          >\n            Share\n          </div>\n          <div\n            className={`reset-state`}\n            onClick={() => {\n              this.confirmReset();\n            }}\n          >\n            Reset\n          </div>\n        </div>\n        <table className=\"tracker\">\n          <tbody>\n            <tr>\n              {[\"\"].concat(playerNames).map((val) => (\n                <td>{val}</td>\n              ))}\n            </tr>\n            {this.populateBody()}\n          </tbody>\n        </table>\n        <div\n          className={`modalBackground ${modalActive}`}\n          onClick={(e) => {\n            if (!this.modalContents.contains(e.target)) {\n              const newState = {\n                ...this.state,\n                editingAnAsset: false,\n                removeAssetLabel: \"\",\n                removeAssetType: \"\",\n              };\n              this.setState(newState, this.reportState(newState));\n            }\n          }}\n        >\n          <div\n            className=\"modalContents\"\n            ref={(node) => (this.modalContents = node)}\n          >\n            <div className={`newAsset ${newAssetVisible}`}>\n              <h4>{`Add new ${editingAsset}`}</h4>\n              <div className=\"inputContainer\">\n                <input\n                  type=\"text\"\n                  onChange={(e) => {\n                    const newState = {\n                      ...this.state,\n                      newAsset: e.target.value,\n                    };\n                    this.setState(newState, this.reportState(newState));\n                  }}\n                  value={this.state.newAsset}\n                  onKeyPress={(e) => {\n                    if (e.key === \"Enter\") this.submitNewAsset();\n                  }}\n                />\n                <div className=\"submit\" onClick={this.submitNewAsset}>\n                  OK\n                </div>\n              </div>\n            </div>\n            <div className={`removeAsset ${removeAssetVisible}`}>\n              <h4>{`Remove ${removeAsset} ${this.state.removeAssetLabel}`}</h4>\n              <div className=\"inputContainer\">\n                <div className=\"submit\" onClick={this.removeAsset}>\n                  Yes\n                </div>\n                <div\n                  className=\"submit\"\n                  onClick={() => {\n                    const newState = {\n                      ...this.state,\n                      removeAssetLabel: \"\",\n                      removeAssetType: \"\",\n                    };\n                    this.setState(newState, this.reportState(newState));\n                  }}\n                >\n                  No\n                </div>\n              </div>\n            </div>\n            <div className={`resetGame ${resetVisible}`}>\n              <h4>Are you sure you want to reset?</h4>\n              <div className=\"inputContainer\">\n                <div className=\"submit\" onClick={this.props.resetState}>\n                  Yes\n                </div>\n                <div\n                  className=\"submit\"\n                  onClick={() => {\n                    const newState = { ...this.state, resetting: false };\n                    this.setState(newState, this.reportState(newState));\n                  }}\n                >\n                  No\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n        <input\n          className=\"hidden\"\n          ref={(node) => (this.hiddenInput = node)}\n          value={`https://jacobhamblin.github.io/clue-helper?state=${btoa(\n            JSON.stringify(this.props.getAllState())\n          )}`}\n        />\n      </div>\n    );\n  }\n}\n\nexport default withSnackbar(Gameplay);\n","import React, { Component } from \"react\";\nimport SnackbarProvider from \"react-simple-snackbar\";\nimport _debounce from \"lodash/debounce\";\nimport \"./App.css\";\nimport \"./vendor/bootstrap-grid.min.css\";\nimport Setup from \"./Setup\";\nimport Game from \"./Gameplay\";\n\nexport const STORAGE_KEY = \"CLUE_STATE\";\nexport const INITIAL_STATE = {\n  game: { version: \"classic\" },\n  play: false,\n  setup: undefined,\n};\n\nclass App extends Component {\n  state = this.props.state || {\n    game: { version: \"classic\" },\n    play: false,\n    setup: undefined,\n  };\n  componentDidMount() {\n    const loadedShared = this.loadedSharedURL();\n    if (loadedShared) return;\n    let existingState = localStorage.getItem(STORAGE_KEY);\n    if (existingState) {\n      try {\n        existingState = JSON.parse(existingState);\n      } catch (e) {\n        return;\n      }\n      const keys = Object.keys(existingState);\n      if (keys && keys.length) this.setState(existingState);\n    }\n  }\n  checkForURLState = () => {\n    const urlParams = new URLSearchParams(window.location.search);\n    const state = urlParams.get(\"state\");\n    return state;\n  };\n  loadedSharedURL = () => {\n    const state = this.checkForURLState();\n    if (state) {\n      try {\n        const storedState = JSON.parse(atob(state));\n        this.setState(storedState);\n        return true;\n      } catch (e) {\n        return false;\n      }\n    }\n    return false;\n  };\n  resetAllState = () => {\n    localStorage.setItem(STORAGE_KEY, \"\");\n    this.setState(INITIAL_STATE);\n  };\n  updateSetupState = (state) => {\n    if (this.checkForURLState())\n      window.history.replaceState(null, null, window.location.pathname);\n    const tracking = (this.state.game && this.state.game.tracking) || {};\n    state.players.forEach((player) => {\n      tracking[player.id] = tracking[player.id] || {};\n    });\n    const game = { ...this.state.game, players: state.players, tracking };\n    this.setState({ setup: state, game }, this.updateStorage);\n  };\n  updateGameState = (state) => {\n    if (this.checkForURLState())\n      window.history.replaceState(null, null, window.location.pathname);\n    this.setState({ game: state }, this.updateStorage);\n  };\n  updateStorage = _debounce(() => {\n    localStorage.setItem(STORAGE_KEY, JSON.stringify(this.state));\n  }, 500);\n  toggleGameState = () =>\n    this.setState({ play: !this.state.play }, this.updateStorage);\n  render() {\n    const { game, play, setup } = this.state;\n    return (\n      <div className=\"App\">\n        <header className=\"App-header\">\n          {play ? (\n            <SnackbarProvider>\n              <Game\n                state={game}\n                reportState={this.updateGameState}\n                resetState={this.resetAllState}\n                returnToSetup={this.toggleGameState}\n                getAllState={() => this.state}\n              />\n            </SnackbarProvider>\n          ) : (\n            <Setup\n              state={setup}\n              reportState={this.updateSetupState}\n              enterGame={this.toggleGameState}\n            />\n          )}\n        </header>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}