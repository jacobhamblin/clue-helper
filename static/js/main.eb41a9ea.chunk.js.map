{"version":3,"sources":["Setup/index.js","Gameplay/Cell/index.js","Gameplay/index.js","App.js","serviceWorker.js","index.js"],"names":["Setup","reportState","props","state","id","newPlayerName","players","play","enterGame","removePlayer","newState","filter","player","setState","getPlayersList","className","map","name","onClick","submitPlayer","this","length","placeholder","onChange","e","target","value","onKeyPress","key","Component","valToColor","Cell","label","playerID","updateValue","style","backgroundColor","Gameplay","classicSuspects","MDSuspects","concat","classicWeapons","MDWeapons","classicRooms","MDRooms","customSuspects","customWeapons","customRooms","confirmReset","resetting","shareState","openSnackbar","hiddenInput","select","setSelectionRange","document","execCommand","newAssetModal","type","editingAnAsset","removeAssetModal","removeAssetType","removeAssetLabel","removeAsset","forEach","prefix","noteValues","returnToSetup","tracking","newTracking","submitNewAsset","newAsset","toggleVersion","version","rows","sectionHeader","Array","push","el","assets","i","row","j","populateRowsOfType","playerNames","MDActive","modalActive","editingAsset","substr","newAssetVisible","removeAssetVisible","resetVisible","val","populateBody","modalContents","contains","ref","node","resetState","btoa","JSON","stringify","getAllState","withSnackbar","STORAGE_KEY","INITIAL_STATE","game","setup","undefined","App","checkForURLState","URLSearchParams","window","location","search","get","loadedSharedURL","storedState","parse","atob","resetAllState","localStorage","setItem","updateSetupState","history","replaceState","pathname","updateStorage","updateGameState","_debounce","toggleGameState","existingState","getItem","keys","Object","Boolean","hostname","match","ReactDOM","render","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.eb41a9ea.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport \"./Setup.css\";\n\nclass Setup extends Component {\n  reportState = this.props.reportState;\n  state = this.props.state || {\n    id: 0,\n    newPlayerName: \"\",\n    players: [],\n    play: false,\n  };\n  enterGame = () => {\n    this.reportState(this.state);\n    this.props.enterGame();\n  };\n  removePlayer = (id) => {\n    const { players } = this.state;\n    const newState = {\n      ...this.state,\n      players: players.filter((player) => player.id !== id),\n    };\n    this.setState(newState, this.reportState(newState));\n  };\n  getPlayersList = () => {\n    return (\n      <ul className=\"players-list\">\n        {this.state.players.map((player) => {\n          return (\n            <li>\n              <span>{player.name}</span>\n              <button\n                onClick={() => {\n                  this.removePlayer(player.id);\n                }}\n              >\n                x\n              </button>\n            </li>\n          );\n        })}\n      </ul>\n    );\n  };\n  submitPlayer = () => {\n    const { id, newPlayerName, players } = this.state;\n    const newState = {\n      ...this.state,\n      players: [...players, { id, name: newPlayerName }],\n      newPlayerName: \"\",\n      id: id + 1,\n    };\n    this.setState(newState, this.reportState(newState));\n  };\n  render() {\n    const play = this.state.players.length ? (\n      <div className=\"play\" onClick={() => this.enterGame()}>\n        Play\n      </div>\n    ) : (\n      <div className=\"play disabled\">Play</div>\n    );\n\n    return (\n      <div className=\"Setup offset-md-3 col-md-6 col-xs-12\">\n        <div className=\"new-player\">\n          <input\n            className=\"player-name\"\n            placeholder=\"player name\"\n            onChange={(e) => {\n              const newState = {\n                ...this.state,\n                newPlayerName: e.target.value,\n              };\n              this.setState(newState, this.reportState(newState));\n            }}\n            onKeyPress={(e) => {\n              if (e.key === \"Enter\") this.submitPlayer();\n            }}\n            value={this.state.newPlayerName}\n          />\n          <button\n            className=\"new-player-submit\"\n            onClick={() => this.submitPlayer()}\n          >\n            Save Player\n          </button>\n        </div>\n        {this.getPlayersList()}\n        {play}\n      </div>\n    );\n  }\n}\n\nexport default Setup;\n","import React from \"react\";\nimport \"./Cell.css\";\n\nconst valToColor = [\"inherit\", \"#ff785f\", \"#ff2a45\", \"#a143be\", \"#ccc\"];\n\nfunction Cell({ label, playerID, updateValue, value }) {\n  return (\n    <td\n      className=\"color\"\n      onClick={() => {\n        updateValue(playerID, label);\n      }}\n      style={{ backgroundColor: valToColor[value] }}\n    />\n  );\n}\n\nexport default Cell;\n","import React, { Component } from \"react\";\nimport { withSnackbar } from \"react-simple-snackbar\";\nimport \"./Gameplay.css\";\nimport Cell from \"./Cell\";\n\nclass Gameplay extends Component {\n  state = this.props.state;\n  reportState = this.props.reportState;\n  classicSuspects = [\n    \"Mr. Green\",\n    \"Prof. Plum\",\n    \"Col. Mustard\",\n    \"Mrs. Peacock\",\n    \"Miss Scarlet\",\n    \"Mrs. White\",\n  ];\n  MDSuspects = this.classicSuspects.concat([\n    \"Mme Rose\",\n    \"Sgt. Gray\",\n    \"M. Brunette\",\n    \"Miss Peach\",\n  ]);\n  classicWeapons = [\n    \"Candlestick\",\n    \"Knife\",\n    \"Lead Pipe\",\n    \"Revolver\",\n    \"Rope\",\n    \"Wrench\",\n  ];\n  MDWeapons = this.classicWeapons.concat([\"Poison\", \"Horseshoe\"]);\n  classicRooms = [\n    \"Conservatory\",\n    \"Lounge\",\n    \"Kitchen\",\n    \"Library\",\n    \"Hall\",\n    \"Study\",\n    \"Ballroom\",\n    \"Dining Room\",\n    \"Billiard Room\",\n  ];\n  MDRooms = [\n    \"Courtyard\",\n    \"Gazebo\",\n    \"Drawing Room\",\n    \"Dining Room\",\n    \"Kitchen\",\n    \"Carriage House\",\n    \"Trophy Room\",\n    \"Conservatory\",\n    \"Studio\",\n    \"Billiard Room\",\n    \"Library\",\n    \"Fountain\",\n  ];\n  customSuspects = [];\n  customWeapons = [];\n  customRooms = [];\n  confirmReset = () => {\n    const newState = { ...this.state, resetting: true };\n    this.setState(newState, this.reportState(newState));\n  };\n  shareState = () => {\n    const { openSnackbar } = this.props;\n    this.hiddenInput.select();\n    this.hiddenInput.setSelectionRange(0, 99999);\n    document.execCommand(\"copy\");\n    openSnackbar(\"Shareable URL copied!\", 3000);\n  };\n  newAssetModal = (type) => {\n    const newState = { ...this.state, editingAnAsset: type };\n    this.setState(newState, this.reportState(newState));\n  };\n  removeAssetModal = (type, label) => {\n    const newState = {\n      ...this.state,\n      removeAssetType: type,\n      removeAssetLabel: label,\n    };\n    this.setState(newState, this.reportState(newState));\n  };\n  removeAsset = () => {\n    const type = this.state.removeAssetType;\n    const label = this.state.removeAssetLabel;\n    const lists = [\n      this[\"classic\" + type],\n      this[\"MD\" + type],\n      this[\"custom\" + type],\n    ];\n    [\"classic\", \"MD\", \"custom\"].forEach((prefix) => {\n      this[prefix + type] = this[prefix + type].filter(\n        (value) => value !== label\n      );\n    });\n    const newState = {\n      ...this.state,\n      removeAssetType: \"\",\n      removeAssetLabel: \"\",\n    };\n    this.setState(newState, this.reportState(newState));\n  };\n  noteValues = [0, 1, 2, 3, 4];\n  returnToSetup = () => {\n    this.reportState(this.state);\n    this.props.returnToSetup();\n  };\n  updateValue = (playerID, label) => {\n    const { tracking } = this.state;\n    const newTracking = { ...tracking };\n\n    newTracking[playerID][label] =\n      ((newTracking[playerID][label] || 0) + 1) % this.noteValues.length;\n    const newState = { ...this.state, tracking: newTracking };\n    this.setState(newState, this.reportState(newState));\n  };\n  populateRowsOfType(type) {\n    const { tracking, version } = this.state;\n\n    let rows = [];\n    const sectionHeader = [\n      <>\n        <div\n          className=\"addNew\"\n          onClick={() => {\n            this.newAssetModal(type);\n          }}\n        >\n          +\n        </div>\n        <span className=\"header\">{type}</span>\n      </>,\n    ].concat(new Array(this.state.players.length));\n    rows.push(\n      <tr>\n        {sectionHeader.map((el) => (\n          <td className=\"sectionHeader\">{el}</td>\n        ))}\n      </tr>\n    );\n    const assets = this[version + type].concat(this[\"custom\" + type]);\n    for (let i = 0; i < assets.length; i++) {\n      let row = [];\n      const label = assets[i];\n      row.push(\n        <td>\n          <div className=\"assetContainer\">\n            <div\n              className=\"removeAsset\"\n              onClick={() => {\n                this.removeAssetModal(type, label);\n              }}\n            >\n              -\n            </div>\n            <span>{label}</span>\n          </div>\n        </td>\n      );\n      for (let j = 0; j < this.state.players.length; j++) {\n        const playerID = this.state.players[j].id;\n        row.push(\n          <Cell\n            value={tracking[playerID][label] || 0}\n            updateValue={this.updateValue}\n            playerID={playerID}\n            label={label}\n          />\n        );\n      }\n      rows.push(<tr>{row}</tr>);\n    }\n    return <>{rows}</>;\n  }\n  populateBody() {\n    const rowScaffolding = [\"Suspects\", \"Weapons\", \"Rooms\"];\n    return <>{rowScaffolding.map((row) => this.populateRowsOfType(row))}</>;\n  }\n  submitNewAsset = () => {\n    this[\"custom\" + this.state.editingAnAsset] = this[\n      \"custom\" + this.state.editingAnAsset\n    ].concat([this.state.newAsset]);\n    const newState = {\n      ...this.state,\n      editingAnAsset: false,\n      newAsset: \"\",\n    };\n    this.setState(newState, this.reportState(newState));\n  };\n  toggleVersion = () => {\n    const version = this.state.version === \"MD\" ? \"classic\" : \"MD\";\n    const newState = { ...this.state, version };\n    this.setState(newState, this.reportState(newState));\n  };\n  render() {\n    const { players, version } = this.state;\n    const playerNames = players.map((player) => player.name);\n    const MDActive = version === \"MD\" ? \"active\" : \"\";\n    const modalActive =\n      this.state.editingAnAsset ||\n      this.state.removeAssetLabel ||\n      this.state.resetting\n        ? \"active\"\n        : \"\";\n    const editingAsset =\n      this.state.editingAnAsset &&\n      this.state.editingAnAsset.substr(0, this.state.editingAnAsset.length - 1);\n    const newAssetVisible = this.state.editingAnAsset ? \"active\" : \"\";\n    const removeAssetVisible = this.state.removeAssetLabel ? \"active\" : \"\";\n    const resetVisible = this.state.resetting ? \"active\" : \"\";\n    const removeAsset =\n      this.state.removeAssetType &&\n      this.state.removeAssetType.substr(\n        0,\n        this.state.removeAssetType.length - 1\n      );\n    return (\n      <div className=\"Game offset-md-3 col-md-6 col-xs-12\">\n        <div className=\"top-row\">\n          <div\n            className={`master-detective ${MDActive}`}\n            onClick={() => {\n              this.toggleVersion();\n            }}\n          >\n            MD\n          </div>\n          <div\n            className=\"return\"\n            onClick={() => {\n              this.returnToSetup();\n            }}\n          >\n            Setup\n          </div>\n          <div\n            className={`share-state`}\n            onClick={() => {\n              this.shareState();\n            }}\n          >\n            Share\n          </div>\n          <div\n            className={`reset-state`}\n            onClick={() => {\n              this.confirmReset();\n            }}\n          >\n            Reset\n          </div>\n        </div>\n        <table className=\"tracker\">\n          <tbody>\n            <tr>\n              {[\"\"].concat(playerNames).map((val) => (\n                <td>{val}</td>\n              ))}\n            </tr>\n            {this.populateBody()}\n          </tbody>\n        </table>\n        <div\n          className={`modalBackground ${modalActive}`}\n          onClick={(e) => {\n            if (!this.modalContents.contains(e.target)) {\n              const newState = {\n                ...this.state,\n                editingAnAsset: false,\n                removeAssetLabel: \"\",\n                removeAssetType: \"\",\n              };\n              this.setState(newState, this.reportState(newState));\n            }\n          }}\n        >\n          <div\n            className=\"modalContents\"\n            ref={(node) => (this.modalContents = node)}\n          >\n            <div className={`newAsset ${newAssetVisible}`}>\n              <h4>{`Add new ${editingAsset}`}</h4>\n              <div className=\"inputContainer\">\n                <input\n                  type=\"text\"\n                  onChange={(e) => {\n                    const newState = {\n                      ...this.state,\n                      newAsset: e.target.value,\n                    };\n                    this.setState(newState, this.reportState(newState));\n                  }}\n                  value={this.state.newAsset}\n                  onKeyPress={(e) => {\n                    if (e.key === \"Enter\") this.submitNewAsset();\n                  }}\n                />\n                <div className=\"submit\" onClick={this.submitNewAsset}>\n                  OK\n                </div>\n              </div>\n            </div>\n            <div className={`removeAsset ${removeAssetVisible}`}>\n              <h4>{`Remove ${removeAsset} ${this.state.removeAssetLabel}`}</h4>\n              <div className=\"inputContainer\">\n                <div className=\"submit\" onClick={this.removeAsset}>\n                  Yes\n                </div>\n                <div\n                  className=\"submit\"\n                  onClick={() => {\n                    const newState = {\n                      ...this.state,\n                      removeAssetLabel: \"\",\n                      removeAssetType: \"\",\n                    };\n                    this.setState(newState, this.reportState(newState));\n                  }}\n                >\n                  No\n                </div>\n              </div>\n            </div>\n            <div className={`resetGame ${resetVisible}`}>\n              <h4>Are you sure you want to reset?</h4>\n              <div className=\"inputContainer\">\n                <div className=\"submit\" onClick={this.props.resetState}>\n                  Yes\n                </div>\n                <div\n                  className=\"submit\"\n                  onClick={() => {\n                    const newState = { ...this.state, resetting: false };\n                    this.setState(newState, this.reportState(newState));\n                  }}\n                >\n                  No\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n        <input\n          className=\"hidden\"\n          ref={(node) => (this.hiddenInput = node)}\n          value={`https://jacobhamblin.github.io/clue-helper?state=${btoa(\n            JSON.stringify(this.props.getAllState())\n          )}`}\n        />\n      </div>\n    );\n  }\n}\n\nexport default withSnackbar(Gameplay);\n","import React, { Component } from \"react\";\nimport SnackbarProvider from \"react-simple-snackbar\";\nimport _debounce from \"lodash/debounce\";\nimport \"./App.css\";\nimport \"./vendor/bootstrap-grid.min.css\";\nimport Setup from \"./Setup\";\nimport Game from \"./Gameplay\";\n\nexport const STORAGE_KEY = \"CLUE_STATE\";\nexport const INITIAL_STATE = {\n  game: { version: \"classic\" },\n  play: false,\n  setup: undefined,\n};\n\nclass App extends Component {\n  state = this.props.state || {\n    game: { version: \"classic\" },\n    play: false,\n    setup: undefined,\n  };\n  componentDidMount() {\n    const loadedShared = this.loadedSharedURL();\n    if (loadedShared) return;\n    let existingState = localStorage.getItem(STORAGE_KEY);\n    if (existingState) {\n      try {\n        existingState = JSON.parse(existingState);\n      } catch (e) {\n        return;\n      }\n      const keys = Object.keys(existingState);\n      if (keys && keys.length) this.setState(existingState);\n    }\n  }\n  checkForURLState = () => {\n    const urlParams = new URLSearchParams(window.location.search);\n    const state = urlParams.get(\"state\");\n    return state;\n  };\n  loadedSharedURL = () => {\n    const state = this.checkForURLState();\n    if (state) {\n      try {\n        const storedState = JSON.parse(atob(state));\n        this.setState(storedState);\n        return true;\n      } catch (e) {\n        return false;\n      }\n    }\n    return false;\n  };\n  resetAllState = () => {\n    localStorage.setItem(STORAGE_KEY, \"\");\n    this.setState(INITIAL_STATE);\n  };\n  updateSetupState = (state) => {\n    if (this.checkForURLState())\n      window.history.replaceState(null, null, window.location.pathname);\n    const tracking = (this.state.game && this.state.game.tracking) || {};\n    state.players.forEach((player) => {\n      tracking[player.id] = tracking[player.id] || {};\n    });\n    const game = { ...this.state.game, players: state.players, tracking };\n    this.setState({ setup: state, game }, this.updateStorage);\n  };\n  updateGameState = (state) => {\n    if (this.checkForURLState())\n      window.history.replaceState(null, null, window.location.pathname);\n    this.setState({ game: state }, this.updateStorage);\n  };\n  updateStorage = _debounce(() => {\n    localStorage.setItem(STORAGE_KEY, JSON.stringify(this.state));\n  }, 500);\n  toggleGameState = () =>\n    this.setState({ play: !this.state.play }, this.updateStorage);\n  render() {\n    const { game, play, setup } = this.state;\n    return (\n      <div className=\"App\">\n        <header className=\"App-header\">\n          {play ? (\n            <SnackbarProvider>\n              <Game\n                state={game}\n                reportState={this.updateGameState}\n                resetState={this.resetAllState}\n                returnToSetup={this.toggleGameState}\n                getAllState={() => this.state}\n              />\n            </SnackbarProvider>\n          ) : (\n            <Setup\n              state={setup}\n              reportState={this.updateSetupState}\n              enterGame={this.toggleGameState}\n            />\n          )}\n        </header>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}